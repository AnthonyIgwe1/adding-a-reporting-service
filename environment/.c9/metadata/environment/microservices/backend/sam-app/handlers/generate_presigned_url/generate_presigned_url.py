{"filter":false,"title":"generate_presigned_url.py","tooltip":"/microservices/backend/sam-app/handlers/generate_presigned_url/generate_presigned_url.py","undoManager":{"mark":3,"position":3,"stack":[[{"start":{"row":0,"column":0},"end":{"row":48,"column":0},"action":"insert","lines":["# Import the logging module to log error messages or other information","import logging","","# Import the boto3 library, which is the AWS SDK for Python, allowing you to interact with AWS services","import boto3","","# Import the ClientError exception from the botocore library to handle specific errors related to AWS clients","from botocore.exceptions import ClientError","","# Create an Amazon S3 client using boto3, which allows you to interact with the Amazon S3 service","s3_client = boto3.client('s3')","","# Define a function to generate a presigned URL for downloading an object from an S3 bucket","def generate_presigned_url(bucket_name, object_name, expiration_in_seconds):","  try:","      # Generate a presigned URL for the specified Amazon S3 object using the 'get_object' method","      presigned_url = s3_client.generate_presigned_url(","          'get_object',  # Action to be performed (get an object from Amazon S3)","          Params={'Bucket': bucket_name, 'Key': object_name},  # Parameters: the bucket and object name","          ExpiresIn=expiration_in_seconds,  # URL expiration time in seconds","          HttpMethod='GET'  # HTTP method allowed for this URL (GET in this case)","      )","      # Return the generated presigned URL as part of a dictionary","      return {'presigned_url_str': presigned_url}","  ","  # If an error occurs while generating the URL, handle it using the ClientError exception","  except ClientError as e:","      # Log the error message for debugging purposes","      logging.error(e)","      # Return None if an error occurs","      return None","","# Define the Lambda function handler that AWS Lambda will invoke when the function is triggered","def lambda_handler(event, context):","  # Set the name of the S3 bucket where the object is stored","  bucket_name = \"report-XXXXXXXXXXXX-YYYYMMDD\"","  ","  # Set the name of the object in the S3 bucket (in this case, it's an HTML report)","  object_name = \"report.html\"","  ","  # Set the expiration time for the presigned URL (in seconds), after which the URL will no longer be valid","  expiration_in_seconds = 300","","  # Call the generate_presigned_url function to get a presigned URL for the object","  response = generate_presigned_url(bucket_name, object_name, expiration_in_seconds)","  ","  # Return the response, which contains the presigned URL","  return response",""],"id":1}],[{"start":{"row":35,"column":17},"end":{"row":35,"column":45},"action":"remove","lines":["report-XXXXXXXXXXXX-YYYYMMDD"],"id":2},{"start":{"row":35,"column":17},"end":{"row":35,"column":80},"action":"insert","lines":["https://images-363548493921-20241107.s3.us-west-2.amazonaws.com"]}],[{"start":{"row":0,"column":0},"end":{"row":48,"column":0},"action":"remove","lines":["# Import the logging module to log error messages or other information","import logging","","# Import the boto3 library, which is the AWS SDK for Python, allowing you to interact with AWS services","import boto3","","# Import the ClientError exception from the botocore library to handle specific errors related to AWS clients","from botocore.exceptions import ClientError","","# Create an Amazon S3 client using boto3, which allows you to interact with the Amazon S3 service","s3_client = boto3.client('s3')","","# Define a function to generate a presigned URL for downloading an object from an S3 bucket","def generate_presigned_url(bucket_name, object_name, expiration_in_seconds):","  try:","      # Generate a presigned URL for the specified Amazon S3 object using the 'get_object' method","      presigned_url = s3_client.generate_presigned_url(","          'get_object',  # Action to be performed (get an object from Amazon S3)","          Params={'Bucket': bucket_name, 'Key': object_name},  # Parameters: the bucket and object name","          ExpiresIn=expiration_in_seconds,  # URL expiration time in seconds","          HttpMethod='GET'  # HTTP method allowed for this URL (GET in this case)","      )","      # Return the generated presigned URL as part of a dictionary","      return {'presigned_url_str': presigned_url}","  ","  # If an error occurs while generating the URL, handle it using the ClientError exception","  except ClientError as e:","      # Log the error message for debugging purposes","      logging.error(e)","      # Return None if an error occurs","      return None","","# Define the Lambda function handler that AWS Lambda will invoke when the function is triggered","def lambda_handler(event, context):","  # Set the name of the S3 bucket where the object is stored","  bucket_name = \"https://images-363548493921-20241107.s3.us-west-2.amazonaws.com\"","  ","  # Set the name of the object in the S3 bucket (in this case, it's an HTML report)","  object_name = \"report.html\"","  ","  # Set the expiration time for the presigned URL (in seconds), after which the URL will no longer be valid","  expiration_in_seconds = 300","","  # Call the generate_presigned_url function to get a presigned URL for the object","  response = generate_presigned_url(bucket_name, object_name, expiration_in_seconds)","  ","  # Return the response, which contains the presigned URL","  return response",""],"id":3},{"start":{"row":0,"column":0},"end":{"row":40,"column":0},"action":"insert","lines":["import logging","import boto3","from botocore.exceptions import ClientError","","# Configure logging","logging.basicConfig(level=logging.INFO)","","# Create an Amazon S3 client","s3_client = boto3.client('s3')","","# Function to generate a presigned URL for downloading an object from an S3 bucket","def generate_presigned_url(bucket_name, object_name, expiration_in_seconds):","    try:","        # Generate a presigned URL for the specified Amazon S3 object","        presigned_url = s3_client.generate_presigned_url(","            'get_object',","            Params={'Bucket': bucket_name, 'Key': object_name},","            ExpiresIn=expiration_in_seconds,","            HttpMethod='GET'","        )","        return {'presigned_url_str': presigned_url}","    except ClientError as e:","        logging.error(f\"Error generating presigned URL: {e}\")","        return None","","# Lambda function handler","def lambda_handler(event, context):","    bucket_name = \"images-363548493921-20241107\"  # Corrected bucket name","    object_name = \"report.html\"","    expiration_in_seconds = 300","","    # Generate presigned URL","    response = generate_presigned_url(bucket_name, object_name, expiration_in_seconds)","    ","    if response:","        logging.info(\"Presigned URL generated successfully.\")","    else:","        logging.error(\"Failed to generate presigned URL.\")","    ","    return response",""]}],[{"start":{"row":0,"column":0},"end":{"row":40,"column":0},"action":"remove","lines":["import logging","import boto3","from botocore.exceptions import ClientError","","# Configure logging","logging.basicConfig(level=logging.INFO)","","# Create an Amazon S3 client","s3_client = boto3.client('s3')","","# Function to generate a presigned URL for downloading an object from an S3 bucket","def generate_presigned_url(bucket_name, object_name, expiration_in_seconds):","    try:","        # Generate a presigned URL for the specified Amazon S3 object","        presigned_url = s3_client.generate_presigned_url(","            'get_object',","            Params={'Bucket': bucket_name, 'Key': object_name},","            ExpiresIn=expiration_in_seconds,","            HttpMethod='GET'","        )","        return {'presigned_url_str': presigned_url}","    except ClientError as e:","        logging.error(f\"Error generating presigned URL: {e}\")","        return None","","# Lambda function handler","def lambda_handler(event, context):","    bucket_name = \"images-363548493921-20241107\"  # Corrected bucket name","    object_name = \"report.html\"","    expiration_in_seconds = 300","","    # Generate presigned URL","    response = generate_presigned_url(bucket_name, object_name, expiration_in_seconds)","    ","    if response:","        logging.info(\"Presigned URL generated successfully.\")","    else:","        logging.error(\"Failed to generate presigned URL.\")","    ","    return response",""],"id":4},{"start":{"row":0,"column":0},"end":{"row":48,"column":0},"action":"insert","lines":["import logging","import boto3","from botocore.exceptions import ClientError","","# Configure logging for the module","logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')","","# Create an Amazon S3 client with optional region specification","s3_client = boto3.client('s3', region_name='us-west-2')  # Replace 'us-west-2' with your S3 bucket's region if necessary","","# Function to generate a presigned URL for downloading an object from an S3 bucket","def generate_presigned_url(bucket_name, object_name, expiration_in_seconds):","    try:","        # Generate a presigned URL for the specified Amazon S3 object","        presigned_url = s3_client.generate_presigned_url(","            'get_object',","            Params={'Bucket': bucket_name, 'Key': object_name},","            ExpiresIn=expiration_in_seconds,","            HttpMethod='GET'","        )","        logging.info(f\"Presigned URL generated successfully for bucket '{bucket_name}' and object '{object_name}'.\")","        return {'presigned_url_str': presigned_url}","    except ClientError as e:","        logging.error(f\"Error generating presigned URL: {e.response['Error']['Code']} - {e.response['Error']['Message']}\")","        return None","","# Lambda function handler","def lambda_handler(event, context):","    bucket_name = \"images-363548493921-20241107\"  # Ensure this is just the bucket name without URL","    object_name = \"report.html\"","    expiration_in_seconds = 300  # URL expires in 300 seconds (5 minutes)","","    # Generate the presigned URL","    response = generate_presigned_url(bucket_name, object_name, expiration_in_seconds)","    ","    if response:","        logging.info(\"Presigned URL generation completed.\")","    else:","        logging.error(\"Failed to generate presigned URL.\")","    ","    return response","","# Example invocation for local testing (not applicable in AWS Lambda)","if __name__ == \"__main__\":","    # Simulate an event and context for local testing","    test_event = {}","    test_context = {}","    print(lambda_handler(test_event, test_context))",""]}]]},"ace":{"folds":[],"scrolltop":392,"scrollleft":0,"selection":{"start":{"row":48,"column":0},"end":{"row":48,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":27,"state":"start","mode":"ace/mode/python"}},"timestamp":1731016092381,"hash":"591ab875e71c2d41fc5ad53f4c4585315cd6ce0c"}